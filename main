import tkinter as tk
from tkinter import messagebox
import mysql.connector
from mysql.connector import Error


def connect_db():
    try:
        print("Попытка подключения к базе данных...")
        connection = mysql.connector.connect(
            host='localhost',        # Адрес сервера MySQL
            database='test',         # Имя базы данных
            user='root',             # Имя пользователя
            password='12345678'      # Пароль
        )

        if connection.is_connected():
            print("Подключение успешно!")
            return connection
        else:
            print("Не удалось подключиться к базе данных.")
            return None
    except Error as e:
        print(f"Ошибка при подключении: {e}")
        messagebox.showerror("Ошибка", f"Ошибка подключения к базе данных: {e}")
        return None


def add_user():
    username = entry_username.get()
    password = entry_password.get()
    role = entry_role.get()

    if not username or not password or not role:
        messagebox.showwarning("Внимание", "Пожалуйста, заполните все поля.")
        return

    try:
        connection = connect_db()
        if connection:
            cursor = connection.cursor()
            cursor.execute("INSERT INTO users (username, password, role) VALUES (%s, %s, %s)",
                           (username, password, role))
            connection.commit()
            cursor.close()
            connection.close()
            messagebox.showinfo("Успех", "Пользователь успешно добавлен.")
            clear_fields()
    except Error as e:
        print(f"Ошибка при добавлении пользователя: {e}")
        messagebox.showerror("Ошибка", f"Ошибка при добавлении пользователя: {e}")


def update_user():
    username = entry_username.get()
    new_password = entry_password.get()
    new_role = entry_role.get()

    if not username or not new_password or not new_role:
        messagebox.showwarning("Внимание", "Пожалуйста, заполните все поля.")
        return

    try:
        connection = connect_db()
        if connection:
            cursor = connection.cursor()
            cursor.execute("UPDATE users SET password = %s, role = %s WHERE username = %s",
                           (new_password, new_role, username))
            connection.commit()
            cursor.close()
            connection.close()
            messagebox.showinfo("Успех", "Данные пользователя успешно обновлены.")
            clear_fields()
    except Error as e:
        print(f"Ошибка при изменении данных: {e}")
        messagebox.showerror("Ошибка", f"Ошибка при изменении данных пользователя: {e}")


def delete_user():
    username = entry_username.get()

    if not username:
        messagebox.showwarning("Внимание", "Пожалуйста, введите имя пользователя.")
        return

    try:
        connection = connect_db()
        if connection:
            cursor = connection.cursor()
            cursor.execute("DELETE FROM users WHERE username = %s", (username,))
            connection.commit()
            cursor.close()
            connection.close()
            messagebox.showinfo("Успех", "Пользователь успешно удален.")
            clear_fields()
    except Error as e:
        print(f"Ошибка при удалении пользователя: {e}")
        messagebox.showerror("Ошибка", f"Ошибка при удалении пользователя: {e}")


def clear_fields():
    entry_username.delete(0, tk.END)
    entry_password.delete(0, tk.END)
    entry_role.delete(0, tk.END)


root = tk.Tk()
root.title("Управление пользователями")
root.geometry("400x300")


label_username = tk.Label(root, text="Имя пользователя")
label_username.grid(row=0, column=0, padx=10, pady=10)

entry_username = tk.Entry(root)
entry_username.grid(row=0, column=1, padx=10, pady=10)

label_password = tk.Label(root, text="Пароль")
label_password.grid(row=1, column=0, padx=10, pady=10)

entry_password = tk.Entry(root, show="*")
entry_password.grid(row=1, column=1, padx=10, pady=10)

label_role = tk.Label(root, text="Роль")
label_role.grid(row=2, column=0, padx=10, pady=10)

entry_role = tk.Entry(root)
entry_role.grid(row=2, column=1, padx=10, pady=10)


button_add = tk.Button(root, text="Добавить", command=add_user)
button_add.grid(row=3, column=0, padx=10, pady=10)

button_update = tk.Button(root, text="Изменить", command=update_user)
button_update.grid(row=3, column=1, padx=10, pady=10)

button_delete = tk.Button(root, text="Удалить", command=delete_user)
button_delete.grid(row=4, column=0, padx=10, pady=10)

button_clear = tk.Button(root, text="Очистить", command=clear_fields)
button_clear.grid(row=4, column=1, padx=10, pady=10)

root.mainloop()
